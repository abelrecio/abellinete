#!/bin/bash

TEST_ARGS=("$@")

comprobar_norminette() {
    echo "Comprobando normas de estilo con norminette..."
    norminette $(ls *.c | grep -v "main.c") > errnorm.txt 2>&1
    if grep -q -v "OK!" errnorm.txt; then
        echo "Errores de estilo detectados. Mira errnorm.txt."
        return 1
    fi
    return 0
}

test_sanitizer() {
    rm -f test_files/error.log
    comprobar_norminette
    [ $? -ne 0 ] && echo

    echo "Compilando con AddressSanitizer..."
    cc -fsanitize=address -Wall -Wextra -Werror *.c -o test_libft_sanitizer
	if [ $? -ne 0 ]; then
        echo "FallÃ³ compilaciÃ³n con Sanitizer."
        read -p "Pulsa enterâ€¦"
        return 1
    fi

    echo "Ejecutando: ./test_libft_sanitizer ${TEST_ARGS[*]}"
    ./test_libft_sanitizer "${TEST_ARGS[@]}"
    if [ $? -ne 0 ]; then
        echo "Errores en Sanitizer."
    else
        echo "OK con Sanitizer."
    fi
    read -p "Pulsa enterâ€¦"
}

test_valgrind() {
    rm -f test_files/error.log
    comprobar_norminette
    [ $? -ne 0 ] && echo

    echo "Compilando para Valgrind..."
    cc -Wall -Wextra -Werror *.c -o test_libft_valgrind -lbsd
    if [ $? -ne 0 ]; then
        echo "FallÃ³ compilaciÃ³n para Valgrind."
        read -p "Pulsa enterâ€¦"
        return 1
    fi

    echo "Ejecutando: valgrind --leak-check=full --error-exitcode=1 ./test_libft_valgrind ${TEST_ARGS[*]}"
    valgrind --leak-check=full --error-exitcode=1 ./test_libft_valgrind "${TEST_ARGS[@]}"
    if [ $? -ne 0 ]; then
        echo "Fugas detectadas por Valgrind."
    else
        echo "Sin fugas con Valgrind."
    fi
    read -p "Pulsa enterâ€¦"
}

test_normal() {
    rm -f test_files/error.log
    comprobar_norminette
    [ $? -ne 0 ] && echo

    echo "Compilando normalmente..."
    cc -Wall -Wextra -Werror *.c -o test_libft -lbsd
    if [ $? -ne 0 ]; then
        echo "FallÃ³ compilaciÃ³n normal."
        read -p "Pulsa enterâ€¦"
        return 1
    fi

    echo "Ejecutando: ./test_libft ${TEST_ARGS[*]}"
    ./test_libft "${TEST_ARGS[@]}"
    if [ $? -eq 0 ]; then
        echo "Todas las pruebas pasaron."
    else
        echo "Pruebas fallaron (exit code $?)."
    fi
    read -p "Pulsa enterâ€¦"
}

while true; do
    clear
    echo "  â¬›â¬›                ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©                â¬›â¬›  "
    echo "â¬›â¬œâ¬œâ¬›â¬›        ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©        â¬›â¬›â¬œâ¬œâ¬›"
    echo "â¬›ğŸŸ§â¬œâ¬œâ¬œâ¬›â¬›  ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©  â¬›â¬›â¬œâ¬œâ¬œğŸŸ§â¬›"
    echo "â¬›ğŸŸ§ğŸŸ§â¬œâ¬œâ¬œâ¬œâ¬œğŸŸ¥ğŸŸ¥ğŸŸ¥ğŸŸ¥ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ¥ğŸŸ¥ğŸŸ¥ğŸŸ¥â¬œâ¬œâ¬œâ¬œâ¬œğŸŸ§ğŸŸ§â¬›"
    echo "â¬›ğŸŸ§ğŸŸ§â¬œâ¬œâ¬œâ¬œğŸŸ¥ğŸŸ¥ğŸŸ¥ğŸŸ¥ğŸŸ¥ğŸŸ¥ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ¥ğŸŸ¥ğŸŸ¥ğŸŸ¥ğŸŸ¥ğŸŸ¥â¬œâ¬œâ¬œâ¬œğŸŸ§ğŸŸ§â¬›"
    echo "â¬›ğŸŸ§ğŸŸ§â¬œâ¬œğŸŸ¥ğŸŸ¥â¬œâ¬œâ¬œâ¬œâ¬œğŸŸ¥ğŸŸ«ğŸŸ«ğŸŸ«ğŸŸ«ğŸŸ¥â¬œâ¬œâ¬œâ¬œâ¬œğŸŸ¥ğŸŸ¥â¬œâ¬œğŸŸ§ğŸŸ§â¬›"
    echo "â¬›ğŸŸ§ğŸŸ§â¬œâ¬œğŸŸ¥ğŸŸ¥â¬œâ¬œâ¬œâ¬œâ¬œğŸŸ¥ğŸŸ«ğŸŸ«ğŸŸ«ğŸŸ«ğŸŸ¥â¬œâ¬œâ¬œâ¬œâ¬œğŸŸ¥ğŸŸ¥â¬œâ¬œğŸŸ§ğŸŸ§â¬›"
    echo "  â¬›ğŸŸ§ğŸŸ§ğŸŸ«ğŸŸ¥ğŸŸ¥ğŸŸ¥ğŸŸ¥ğŸŸ¥ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ¥ğŸŸ¥ğŸŸ¥ğŸŸ¥ğŸŸ¥ğŸŸ«ğŸŸ§ğŸŸ§â¬›  "
    echo "  â¬›ğŸŸ§ğŸŸ§ğŸŸ«ğŸŸ«ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ«ğŸŸ«ğŸŸ§ğŸŸ§â¬›  "
    echo "    â¬›ğŸŸ«ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ«â¬›    "
    echo "    ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ§ğŸŸ§ğŸŸ§ğŸŸ§ğŸŸ§ğŸŸ§ğŸŸ§ğŸŸ§ğŸŸ§ğŸŸ§ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©    "
    echo "  ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ§â¬›â¬›â¬›ğŸŸ§ğŸŸ§ğŸŸ§â¬œâ¬œâ¬œâ¬œğŸŸ§ğŸŸ§ğŸŸ§â¬›â¬›â¬›ğŸŸ§ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©  "
    echo "ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©â¬›ğŸŸ§â¬›ğŸŸ§ğŸŸ§ğŸŸ«â¬›ğŸŸ§â¬œâ¬œâ¬œâ¬œâ¬œâ¬œğŸŸ§â¬›ğŸŸ«ğŸŸ§ğŸŸ§â¬›ğŸŸ§â¬›ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©"
    echo "ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©â¬›ğŸŸ§ğŸŸ§ğŸŸ§ğŸŸ§ğŸŸ§ğŸŸ«â¬›â¬œâ¬œâ¬œâ¬œâ¬œâ¬œâ¬›ğŸŸ«ğŸŸ§ğŸŸ§ğŸŸ§ğŸŸ§ğŸŸ§â¬›ğŸŸ©ğŸŸ©ğŸŸ©ğŸŸ©"
    echo "      â¬›â¬œğŸŸ§ğŸŸ§ğŸŸ§ğŸŸ§ğŸŸ§ğŸŸ§ğŸŸ§ğŸŸ§â¬œâ¬œâ¬œâ¬œğŸŸ§ğŸŸ§ğŸŸ§ğŸŸ§ğŸŸ§ğŸŸ§ğŸŸ§ğŸŸ§â¬œâ¬›      "
    echo "  â¬›â¬›â¬œâ¬œğŸŸ§ğŸŸ§ğŸŸ§â¬›â¬›ğŸŸ§ğŸŸ§ğŸŸ§â¬œâ¬œâ¬œâ¬œğŸŸ§ğŸŸ§ğŸŸ§â¬›â¬›ğŸŸ§ğŸŸ§ğŸŸ§â¬œâ¬œâ¬›â¬›  "
    echo "  â¬›â¬œâ¬œâ¬œğŸŸ§ğŸŸ§â¬›ğŸŸ§ğŸŸ§â¬›ğŸŸ§ğŸŸ§â¬œâ¬œâ¬œâ¬œğŸŸ§ğŸŸ§â¬›ğŸŸ§ğŸŸ§â¬›ğŸŸ§ğŸŸ§â¬œâ¬œâ¬œâ¬›  "
    echo "    â¬›â¬œâ¬œâ¬œğŸŸ§ğŸŸ§ğŸŸ§ğŸŸ§ğŸŸ§ğŸŸ§â¬œâ¬œâ¬œâ¬œâ¬œâ¬œğŸŸ§ğŸŸ§ğŸŸ§ğŸŸ§ğŸŸ§ğŸŸ§â¬œâ¬œâ¬œâ¬›    "
    echo "      â¬›â¬œâ¬œâ¬œğŸŸ§ğŸŸ§ğŸŸ§ğŸŸ§â¬œâ¬œâ¬œâ¬œâ¬œâ¬œâ¬œâ¬œğŸŸ§ğŸŸ§ğŸŸ§ğŸŸ§â¬œâ¬œâ¬œâ¬›      "
    echo "  â¬›â¬›â¬œâ¬œâ¬œâ¬œâ¬œâ¬œâ¬œâ¬œâ¬œâ¬œâ¬œâ¬œâ¬œâ¬œâ¬œâ¬œâ¬œâ¬œâ¬œâ¬œâ¬œâ¬œâ¬œâ¬œâ¬›â¬›  "
    echo "  â¬›â¬œâ¬œâ¬œâ¬œâ¬œâ¬œâ¬œâ¬œâ¬œâ¬œğŸŸ«ğŸŸ«ğŸŸ«ğŸŸ«ğŸŸ«ğŸŸ«â¬œâ¬œâ¬œâ¬œâ¬œâ¬œâ¬œâ¬œâ¬œâ¬œâ¬›  "
    echo "    â¬›â¬œâ¬œâ¬œâ¬œâ¬œâ¬œâ¬œâ¬œâ¬œâ¬œğŸŸ«ğŸŸ«ğŸŸ«ğŸŸ«â¬œâ¬œâ¬œâ¬œâ¬œâ¬œâ¬œâ¬œâ¬œâ¬œâ¬›    "
    echo "      â¬›â¬œâ¬œâ¬œâ¬œâ¬œâ¬œâ¬œâ¬œâ¬œâ¬œğŸŸ«ğŸŸ«â¬œâ¬œâ¬œâ¬œâ¬œâ¬œâ¬œâ¬œâ¬œâ¬œâ¬›      "
    echo "        â¬›â¬œâ¬œâ¬œâ¬œâ¬œâ¬œâ¬œâ¬œâ¬œâ¬œâ¬œâ¬œâ¬œâ¬œâ¬œâ¬œâ¬œâ¬œâ¬œâ¬œâ¬›        "
    echo "          â¬›â¬œâ¬œâ¬œâ¬œâ¬œâ¬œâ¬›â¬œâ¬œâ¬œâ¬œâ¬›â¬œâ¬œâ¬œâ¬œâ¬œâ¬œâ¬›          "
    echo "            â¬›â¬›â¬œâ¬œâ¬œâ¬œâ¬œâ¬›â¬›â¬›â¬›â¬œâ¬œâ¬œâ¬œâ¬œâ¬›â¬›            "
    echo "                â¬›â¬›â¬œâ¬œâ¬œâ¬œâ¬œâ¬œâ¬œâ¬œâ¬œâ¬œâ¬›â¬›                "
    echo "                    â¬›â¬›â¬›â¬œâ¬œâ¬œâ¬œâ¬›â¬›â¬›                    "
    echo "                          â¬›â¬›â¬›â¬›                          "
    echo "========================================"
    echo "           ABELINETTE BETA"
    echo "========================================"
    echo "1) Test con AddressSanitizer"
    echo "2) Test con Valgrind"
    echo "3) Test normal"
    echo "4) Salir"
    echo "----------------------------------------"
    read -p "Elige una opciÃ³n [1-4]: " opt

    case $opt in
        1) test_sanitizer ;;
        2) test_valgrind ;;
        3) test_normal ;;
        4) echo "Saliendoâ€¦"; exit 0 ;;
        *) echo "OpciÃ³n invÃ¡lida."; read -p "Pulsa enterâ€¦";;
    esac
done

